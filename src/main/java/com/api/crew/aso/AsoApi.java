/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.14).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.api.crew.aso;

import com.api.crew.aso.model.CrewDetails;
import com.api.crew.aso.model.CrewMemberDetails;
import com.api.crew.aso.model.CrewRequest;
import com.api.crew.aso.model.CrewRequestUpdate;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-07-09T07:58:16.858Z")

@Api(value = "aso", description = "the aso API")
@RequestMapping(value = "/v2")
public interface AsoApi {

    @ApiOperation(value = "Search with crewId", nickname = "getCrewDetails", notes = "", response = CrewDetails.class, tags={ "crewDetail", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = CrewDetails.class),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Crew not found") })
    @RequestMapping(value = "/aso/crew/details{crewId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<CrewDetails> getCrewDetails(@ApiParam(value = "",required=true) @PathVariable("crewId") Long crewId);


    @ApiOperation(value = "", nickname = "getCrewMemberDetails", notes = "", response = CrewMemberDetails.class, responseContainer = "List", tags={ "crewMemberDetail", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = CrewMemberDetails.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Invalid FlightNumber supplied"),
        @ApiResponse(code = 404, message = "Flight not found") })
    @RequestMapping(value = "/aso/crew/ids",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<List<CrewMemberDetails>> getCrewMemberDetails(@ApiParam(value = "Flight Details" ,required=true )  @Valid @RequestBody CrewRequest body);
    
    @ApiOperation(value = "", nickname = "updateCrewMember", notes = "", response = CrewDetails.class, responseContainer = "List", tags={ "crewMemberDetail", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = CrewDetails.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Invalid FlightNumber supplied"),
        @ApiResponse(code = 404, message = "Flight not found") })
    @RequestMapping(value = "/aso/crew/updateId",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<CrewDetails> updateCrewMember(@ApiParam(value = "Flight Details" ,required=true )  @Valid @RequestBody CrewRequestUpdate body);

}
